CREATE TABLE CUSTOMER ( 
CID NUMBER (5), 
CNAME VARCHAR (20), 
AGE NUMBER (3), 
ADDRESS VARCHAR (20), 
SAL NUMBER (5), 
CONSTRAINT PK_CUST PRIMARY KEY(CID));

CREATE OR REPLACE TRIGGER salary_difference_trigger 
BEFORE INSERT OR UPDATE OR DELETE ON CUSTOMERS 
FOR EACH ROW 
DECLARE 
  v_old_salary CUSTOMERS.SALARY%TYPE; 
  v_new_salary CUSTOMERS.SALARY%TYPE; 
BEGIN 
  IF INSERTING THEN 
    -- For INSERT operation, display new salary 
    DBMS_OUTPUT.PUT_LINE('New Salary: ' || :NEW.SALARY); 
   
  ELSIF UPDATING THEN 
    -- For UPDATE operation, display old and new salaries 
    v_old_salary := :OLD.SALARY; 
    v_new_salary := :NEW.SALARY; 
    DBMS_OUTPUT.PUT_LINE('Old Salary: ' || v_old_salary); 
    DBMS_OUTPUT.PUT_LINE('New Salary: ' || v_new_salary); 
   
    -- Display salary difference 
    IF v_old_salary IS NOT NULL AND v_new_salary IS NOT NULL THEN 
      DBMS_OUTPUT.PUT_LINE('Salary Difference: ' || (v_new_salary - v_old_salary)); 
    END IF; 
   
  ELSIF DELETING THEN 
    -- For DELETE operation, display old salary 
    DBMS_OUTPUT.PUT_LINE('Old Salary: ' || :OLD.SALARY); 
  END IF; 
END;
